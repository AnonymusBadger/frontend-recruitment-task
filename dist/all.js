!function(){"use strict";document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelectorAll(".modal");e.forEach(e=>{{var t=e;const n=document.querySelector(`[data-target="#${t.id}"]`),r=t.querySelectorAll("[data-dismiss=modal]"),o=t.querySelector(".modal__content"),s=e=>{o.contains(e.target)||u()},a=new Event(t.id+"-show"),d=new Event(t.id+"-hide"),c=()=>{t.style.display="block",setTimeout(()=>{t.classList.add("show")},150),document.body.classList.add("stop-scroll"),document.addEventListener("click",s),document.dispatchEvent(a),t.focus()},u=()=>{t.classList.remove("show"),setTimeout(()=>{t.style.display="none"},150),document.body.classList.remove("stop-scroll"),document.removeEventListener("click",s),n.focus(),document.dispatchEvent(d)};return n.addEventListener("click",e=>{e.stopPropagation(),c()}),r.forEach(e=>{e.addEventListener("click",()=>{u()})}),c,u,n,void r}})});const a={saveValue:(e,t)=>{sessionStorage.setItem(e,JSON.stringify(t))},getValue:e=>JSON.parse(sessionStorage.getItem(e)),remove:e=>{sessionStorage.removeItem(e)},clear:()=>{sessionStorage.clear()}},s=t=>{var e=e=>{t.innerHTML=e};return{update:e,notify:e}},d=(e,t)=>{0<e.length&&e.forEach(e=>{e.addEventListener("click",()=>{t()})})},r=(e=null,t=!0)=>{var t=((e=null,t=!0)=>{if(null==e&&t)throw new Error("Missing ID for Count data persistence! Set persistence to false or add ID");let n=t&&a.getValue("count-"+e)||0;const r=[];const o=()=>{r.forEach(e=>{e.notify(n)})},s=()=>{t&&a.saveValue("count-"+e,n)};return{up:()=>{n++,o(),s()},down:()=>{n--,o(),s()},reset:()=>{n=0,o(),s()},addObserver:e=>{r.push(e)},removeObserver:e=>{e=r.indexOf(e);-1<e&&r.splice(e,1)},notify:o,get count(){return n}}})(e,t),n=document.querySelectorAll(`[data-counter-id="${e}"][data-counter-type=display]`),r=document.querySelectorAll(`[data-counter-id="${e}"][data-counter-type=up]`),o=document.querySelectorAll(`[data-counter-id="${e}"][data-counter-type=down]`),e=document.querySelectorAll(`[data-counter-id="${e}"][data-counter-type=reset]`);return d(r,t.up),d(o,t.down),d(e,t.reset),{addButtons:r,subtractButtons:o,resetButtons:e,displays:((e,t)=>{const n=[];return 0<e.length&&(e.forEach(e=>{e=s(e);n.push(e),t.addObserver(e)}),t.notify()),n})(n,t),notify:t.notify,addObserver:t.addObserver,removeObserver:t.removeObserver}},o=(document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelectorAll(".task-module");e.forEach(e=>{e=e.getAttribute("data-counter-id");const t=r(e);n=e=>{setTimeout(()=>{5<e?t.resetButtons.forEach(e=>{e.classList.remove("d-none")}):t.resetButtons.forEach(e=>{e.classList.add("d-none")})},200)};var n,e={notify:e=>{n(e)}};t.addObserver(e),t.notify()})}),e=>{const t=e.url,n=e.success,r=e.error;fetch(e.url).then(e=>{if(e.ok)return e.json();throw new Error(`Network response from ${t} returned code: `+e.status)}).then(e=>(n(e),e)).catch(e=>{r(e)})}),e=(()=>{const n="https://jsonplaceholder.typicode.com/users",r=(e,t)=>{const n=t.success,r=t.error;o({url:e,success:e=>{"function"==typeof n&&n(e)},error:e=>{"function"==typeof n&&r(e)}})};return{getAll:e=>{r(n,e)},getById:(e,t)=>{r(n+"/"+e,t)}}})(),c=(e,t=null)=>{const n=document.createElement(e);return t&&(n.innerHTML=t),n},u=(e=null)=>{const n=c("thead");return e&&e.forEach(e=>{const t=c("tr");e.forEach(e=>{e=c("th",e);t.append(e)}),n.append(t)}),n},l=(e=null)=>{const n=c("tbody");return e&&e.forEach(e=>{const t=c("tr");e.forEach(e=>{e=c("td",e);t.append(e)}),n.append(t)}),n},t=(e=[],t=[])=>{const n=c("table");return n.append(u(e)),n.append(l(t)),n},i={makeHead:u,makeBody:l,makeTable:t};document.addEventListener("DOMContentLoaded",()=>{const t=document.querySelector(".user-table"),n=(()=>{const t=(()=>{const e=document.createElement("div");return e.classList.add("loader"),e.innerHTML="Loading...",e})();return{add:e=>{e.append(t)},remove:()=>{t.remove()}}})();let r=null;const o=(()=>{const t=document.createElement("button");return t.classList.add("button","button--warning"),t.innerHTML="Error! Try again!",t.addEventListener("click",e=>{e.stopPropagation(),t.remove(),s()}),t})(),s=()=>{n.add(t),r&&r.remove(),e.getAll({success:e=>{r=i.makeTable([["Name","Email","Address","Phone","Company"]],(e=>{const r=["name","email","address","phone","company"];return e.reduce((e,t)=>{const n=[];return r.forEach(e=>{switch(e){case"address":n.push(`${t[e].city}, ${t[e].street}, `+t[e].suite);break;case"company":n.push(t[e].name);break;default:n.push(t[e])}}),e.push(n),e},[])})(e)),n.remove(),t.append(r)},error:e=>{n.remove(),t.append(o)}})};document.addEventListener("modal-1-show",()=>{r||s()})})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
